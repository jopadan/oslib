# Get the supported image file formats
# Assumes LIB_SOURCES defined and library name used in find_package as the load/write image filename suffix

if(NOT OSL_IMAGE_FORMAT_DIRECTORY)
	set(OSL_IMAGE_FORMAT_DIRECTORY "${PROJECT_SOURCE_DIR}/src/image/format/")
endif()

if(NOT OSL_IMAGE_FORMAT_LOADER_EXTENSION)
	set(OSL_IMAGE_FORMAT_LOADER_EXTENSION .c)
endif()
if(NOT OSL_IMAGE_FORMAT_WRITER_EXTENSION)
	set(OSL_IMAGE_FORMAT_WRITER_EXTENSION .c)
endif()

if(NOT OSL_IMAGE_FORMAT_LOADER_FILENAME)
	set(OSL_IMAGE_FORMAT_LOADER_FILENAME "oslLoadImageFile")
endif()
if(NOT OSL_IMAGE_FORMAT_WRITER_FILENAME)
	set(OSL_IMAGE_FORMAT_WRITER_FILENAME "oslWriteImageFile")
endif()

file(GLOB_RECURSE OSL_IMAGE_FORMAT_LOADERS_SOURCES LIST_DIRECTORIES false RELATIVE ${OSL_IMAGE_FORMAT_DIRECTORY} CONFIGURE_DEPENDS ${OSL_IMAGE_FORMAT_LOADER_FILENAME}*.c)
file(GLOB_RECURSE OSL_IMAGE_FORMAT_WRITERS_SOURCES LIST_DIRECTORIES false RELATIVE ${OSL_IMAGE_FORMAT_DIRECTORY} CONFIGURE_DEPENDS ${OSL_IMAGE_FORMAT_WRITER_FILENAME}*.c)

foreach(FORMAT_SOURCE ${OSL_IMAGE_FORMAT_LOADERS_SOURCES})
	cmake_path(REMOVE_EXTENSION FORMAT_SOURCE)
	cmake_path(GET FORMAT_SOURCE FILENAME FORMAT_SOURCE)
	string(REGEX REPLACE "^${OSL_IMAGE_FORMAT_LOADER_FILENAME}" "" FORMAT_SOURCE ${FORMAT_SOURCE})
	list(APPEND OSL_IMAGE_FORMAT_LOADERS ${FORMAT_SOURCE})
endforeach()
foreach(FORMAT_SOURCE ${OSL_IMAGE_FORMAT_WRITERS_SOURCES})
	cmake_path(REMOVE_EXTENSION FORMAT_SOURCE)
	cmake_path(GET FORMAT_SOURCE FILENAME FORMAT_SOURCE)
	string(REGEX REPLACE "^${OSL_IMAGE_FORMAT_WRITER_FILENAME}" "" FORMAT_SOURCE ${FORMAT_SOURCE})
	list(APPEND OSL_IMAGE_FORMAT_WRITERS ${FORMAT_SOURCE})
endforeach()

list(APPEND OSL_IMAGE_FORMATS_AVAILABLE ${OSL_IMAGE_FORMAT_LOADERS} ${OSL_IMAGE_FORMAT_WRITERS})
list(REMOVE_DUPLICATES OSL_IMAGE_FORMATS_AVAILABLE)

foreach(IMAGE_FORMAT ${OSL_IMAGE_FORMATS_AVAILABLE})
	find_package(${IMAGE_FORMAT})
	if(${IMAGE_FORMAT}_FOUND)
		list(APPEND OSL_IMAGE_FORMATS_SUPPORTED ${IMAGE_FORMAT})
		if(${IMAGE_FORMAT} IN_LIST OSL_IMAGE_FORMAT_LOADERS)
			add_compile_definitions(-DOSL_IMAGE_LOADER_${IMAGE_FORMAT})
			include_directories(${${IMAGE_FORMAT}_INCLUDE_DIRS})
		endif()
		if(${IMAGE_FORMAT} IN_LIST OSL_IMAGE_FORMAT_WRITERS)
			add_compile_definitions(-DOSL_IMAGE_WRITER_${IMAGE_FORMAT})
			include_directories(${${IMAGE_FORMAT}_INCLUDE_DIRS})
		endif()
	else()
		list(REMOVE_ITEM OSL_IMAGE_FORMAT_WRITERS ${IMAGE_FORMAT})
		list(REMOVE_ITEM OSL_IMAGE_FORMAT_LOADERS ${IMAGE_FORMAT})
	endif()
endforeach()

foreach(IMAGE_FORMAT ${OSL_IMAGE_FORMAT_WRITERS})
	list(APPEND LIB_SOURCES "${PROJECT_SOURCE_DIR}/src/image/format/oslWriteImageFile${IMAGE_FORMAT}.c")
endforeach()
foreach(IMAGE_FORMAT ${OSL_IMAGE_FORMAT_LOADERS})
	list(APPEND LIB_SOURCES "${PROJECT_SOURCE_DIR}/src/image/format/oslLoadImageFile${IMAGE_FORMAT}.c")
endforeach()

message("-- Using ${OSL_IMAGE_FORMATS_SUPPORTED}")

